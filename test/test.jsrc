; Expected output
; 0000 000a 00f0 0010 000a 00f1 0020 000c 00f2 00f0 000c 00f3 00f1 000b 00f0 0030 
; 000a 00f4 0040 000c 00f5 80f4 000d 00f2 000e 00f5 0010 00f0 00f3 0011 00f2 00f0 
; 0012 00f0 00f3 0013 00f1 00f4 0014 00f0 00f2 0015 00f1 00f5 0020 00f0 00f2 0021 
; 00f1 00f3 0022 00f2 00f4 0023 00f3 0024 00f0 0025 00f1 0030 0045 0031 0045 0032 
; 0045 0033 0045 0034 0045 0040 0048 0001 000a 00f6 0050 000a 00f7 0060 000a 00f8  
; 0070 0041 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
EXTRA:
START:  NOP						;0000
		LOAD	A, 0x10			;000A 00F0 0010
		LOAD	B, 0x20			;000A 00F1 0020
		MOV		C, A			;000C 00F2 00F0
		MOV		D, B			;000C 00F3 00F1
		STORE	A, 0x30			;000B 00F0 0030
		LOAD	I, 0x40			;000A 00F4 0040
		MOV		J, [I]			;000C 00F5 80F4
		PUSH	C				;000D 00F2
		POP		J				;000E 00F5
		ADD		A, D			;0010 00F0 00F3
		SUB		C, A			;0011 00F2 00F0
		MUL		A, D			;0012 00F0 00F3
		SMUL	B, I			;0013 00F1 00F4
		DIV		A, C			;0014 00F0 00F2
		SDIV	B, J			;0015 00F1 00F5
		AND		A, C			;0020 00F0 00F2
		OR		B, D			;0021 00F1 00F3
		XOR		C, I			;0022 00F2 00F4
		NOT		D				;0023 00F3
		SHR		A				;0024 00F0
		SHL		B				;0025 00F1
L1:		JUMP	L2				;0030 0045
		JZ		L2				;0031 0045
		JNZ		L2				;0032 0045
		JC		L2				;0033 0045
		JNC		L2				;0034 0045
L2:		CALL	FUNC			;0040 0048
		HALT					;0001

FUNC:	LOAD	SP, 0x50		;000A 00F6 0050
		LOAD	PC, 0x60		;000A 00F7 0060
		LOAD	FLAGS, 0x70		;000A 00F8 0070
		RET						;0041
